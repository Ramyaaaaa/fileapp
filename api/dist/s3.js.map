{"version":3,"sources":["../src/s3.js"],"names":["S3","app","response","file","s3","filename","_","get","attachment","options","Bucket","Key","file1","getObject","createReadStream","pipe","Expires","url","getSignedUrl"],"mappings":";;;;;;;;AAAA;;;;;;;;IACqBA,E;AAEjB,gBAAYC,GAAZ,EAAgBC,QAAhB,EAA4B;AAAA;;AACxB,aAAKD,GAAL,GAAWA,GAAX;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACH;;;;iCAEQC,I,EAAK;AACV,gBAAMC,KAAK,KAAKH,GAAL,CAASG,EAApB;;AAEA,gBAAMF,WAAW,KAAKA,QAAtB;AACA;;AAEA,gBAAMG,WAAWC,iBAAEC,GAAF,CAAMJ,IAAN,EAAW,cAAX,CAAjB;AACAD,qBAASM,UAAT,CAAoBH,QAApB;;AAEA,gBAAMI,UAAU;AACZC,wBAAS,cADG;AAEZC,qBAAML,iBAAEC,GAAF,CAAMJ,IAAN,EAAW,MAAX;AAFM,aAAhB;AAIA,gBAAMS,QAAQR,GAAGS,SAAH,CAAaJ,OAAb,EAAsBK,gBAAtB,EAAd;AACAF,kBAAMG,IAAN,CAAWb,QAAX;AACH;;;sCAEaC,I,EAAK;AACf,gBAAMC,KAAK,KAAKH,GAAL,CAASG,EAApB;;AAEA,gBAAMK,UAAU;AACZC,wBAAS,cADG;AAEZC,qBAAML,iBAAEC,GAAF,CAAMJ,IAAN,EAAW,MAAX;AAFM,aAAhB;AAIA,mBAAOC,GAAGS,SAAH,CAAaJ,OAAb,EAAsBK,gBAAtB,EAAP;AAGH;;;uCAEcX,I,EAAS;AACpB,gBAAMC,KAAK,KAAKH,GAAL,CAASG,EAApB;AACA,gBAAMK,UAAU;AACZC,wBAAS,cADG;AAEZC,qBAAML,iBAAEC,GAAF,CAAMJ,IAAN,EAAW,MAAX,CAFM;AAGZa,yBAAU,OAAK,EAAL,GAAQ,EAHN,CAGU;AAHV,aAAhB;;AAMA,gBAAMC,MAAMb,GAAGc,YAAH,CAAgB,WAAhB,EAA4BT,OAA5B,CAAZ;AACA,mBAAOQ,GAAP;AACH;;;;;;kBA9CgBjB,E","file":"s3.js","sourcesContent":["import _ from 'lodash';\r\nexport default class S3{\r\n\r\n    constructor(app,response)   {\r\n        this.app = app;\r\n        this.response = response;\r\n    }\r\n\r\n    download(file){\r\n        const s3 = this.app.s3;\r\n\r\n        const response = this.response;\r\n        //get object from s3 service\r\n\r\n        const filename = _.get(file,'originalName');\r\n        response.attachment(filename)\r\n\r\n        const options = {\r\n            Bucket : 'ramyafileapp',\r\n            Key : _.get(file,'name')\r\n        }\r\n        const file1 = s3.getObject(options).createReadStream();\r\n        file1.pipe(response);\r\n    }\r\n\r\n    getFileObject(file){\r\n        const s3 = this.app.s3;\r\n\r\n        const options = {\r\n            Bucket : 'ramyafileapp',\r\n            Key : _.get(file,'name')\r\n        }\r\n        return s3.getObject(options).createReadStream();\r\n\r\n\r\n    }\r\n\r\n    getDownloadUrl(file)    {\r\n        const s3 = this.app.s3;\r\n        const options = {\r\n            Bucket : 'ramyafileapp',\r\n            Key : _.get(file,'name'),\r\n            Expires : 3600*24*30, //one hour\r\n        }\r\n\r\n        const url = s3.getSignedUrl('getObject',options);\r\n        return url;\r\n    }\r\n}"]}